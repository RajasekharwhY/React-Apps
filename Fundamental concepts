As a developer why you like React : 
1. It is a declarative -> you declare what you want using react and model the state of the User Interface, 
and react will deal with how part and create the U.I
2. Working with DOM API is hard, With react you can work with Virtual Browser that is friendlier than the real browser.
One of the reason why react gain more popularity is becasue of performance gain use of Virtual DOM 
(you dont need to deal the DOM API). 
3. Very small set of API to learn React, you need to be good at Javascript, you automatically good at react.
4. Learning React pays off big benefits for build Android and IOS appliations. 
React Native allows you to use your same react skills to build native moblie applciations. You can share same logic
between web, Android and IOS applications. 


React is not a complete solution, React is a library...
So you need other soluitons to achive other web development goals. React is small (it focuses on only one thing building user Interfaces)
it is not a complete solution, you need other libraries to form a complete soluiton. 

User Interface is nothing but anything in front of the user to interact with the machine.
User interfaces are every where from small buttons to Dashboards...
If any device we are trying to use can understand javascript we can use react to build User Interface on that device.

React is declarative : We describe user Interface to react, but not tell react how to do it.
react translate to how and tranlate the declarative descriptions which we write in react language to 
actual user interfaces in the browser. 

HTML is declarative for static content
React is delcarative for dynamic content/data.

You need to be a good javascript developer to be a good React developer. 

 
Three simple concepts to understnad 
1.Components:
-------------
In react we Describe user Interfaces with components. (Javascipt functions).
The components are just like funcitons they take some input and out put some thing just like functions.
Components they recieve some input objects and they output the description of a user interface. We can re use the single
components in multiple user interfaces.
And a component can contain other components. 
React components can be of two types: 1. function component 2. class component.
Class components are bit more powerful.Both types are stateful or purely
representational. They take set of props and state as input and outputs what looks like as html.
but really a special javascipt syntax called jsx. The props input is a explict one it is similar to a 
attributes of a html element can have. The state input is a internal one,but it is the really the more
intresting one becase of how react uses it to auto reflect changes in the in browser.
These two input objects have important difference. with in a component the state object can be changed. 
while the props object represents fixed values. Propes are immutable.
Components can only change their interanl states but not there properties. This is a core IDea to understand in react.
 

You don't Invoke react component, You just use it in your html as a regualr html element just like <component />.

2. The state of Reactive Updates:
---------------------------------
It's reactive nature of updates (React name in its simple explanation of this concept) When the state of react component,
the input changes , the user interface it represents , the out put changes as well. The change in the description of the user interface
has to be reflected in the device we are working with. In the browse, we need to generate the html view in the dom tree.
With react we dont need to worry about how to reflect these changes or even manage when to take chagnes to the browser. 
React will simply react to the changes in a componenet's state adn automatically updateh parts of the DOM that need to be updated.

3.Virtual DOM (or tree reconsilation algorithm)
-----------------------------------------------
Third concept of react is its virtual representation of views in memory. to build html applications with react we dont write html at all.
we use javascript to write html. why because, when your web application recieves just data from the server in the background with AJAX.
You need something more than HTML to work with that data.And you have two options. you can use an enhanced HTML template that has loops and conditions.
(you can use the enhanced html template that has loops and conditions.)

or you can relay on the power of Javascript itselft to generate the html from the data.  Both approaches has advantages and disadvantages.
React pics the later (user power of javascript to generate html) and eliminates the extra step needdd to parse and enhanced html template.

One big advantage of this HTML and Javascript approach is how it enables React to Keep and use the Virtual representation of HTML view in memory.
Which is commonly known as Virtual DOM (or tree reconsilation algorithm). React uses virtual DOM, react uses virtual DOM to compare versions of the U.I
in memory before it acts on them. 
